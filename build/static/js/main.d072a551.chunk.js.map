{"version":3,"sources":["store/types.ts","store/actions/updateUser.ts","store/actions/updateCart.ts","store/actions/index.ts","resources.ts","styles.ts","components/layout/Nav.tsx","ajax.ts","components/layout/NavLogin.tsx","components/layout/MobileNav.tsx","components/layout/Header.tsx","components/layout/Footer.tsx","components/layout/index.tsx","components/pages/About.tsx","components/pages/Contact.tsx","components/pages/Profile.tsx","components/pages/Redirect.tsx","components/pages/NotFound.tsx","components/pages/Login.tsx","components/ListItem.tsx","util.ts","components/List.tsx","components/SearchBar.tsx","components/pages/ListDisplay.tsx","images/loading.gif","components/Payment.tsx","components/pages/Checkout.tsx","App.tsx","reportWebVitals.ts","store/reducers/user.ts","store/reducers/cart.ts","store/reducers/index.ts","index.tsx"],"names":["UPDATE_USER","UPDATE_CART","LOG_IN","USERS","STORE","ORDERS","CHECKOUT","listItemTitleKeys","updateUser","payload","type","updateCart","updateUserAction","updateCartAction","url","window","location","host","includes","local","localStorage","getItem","console","warn","API","URL","routes","ABOUT","CONTACT","PROFILE","SIGN_UP","apiRoutes","Object","entries","ORDER","USER","ITEM","TAG","reduce","acc","cur","colors","Nav","user","useSelector","to","exact","activeClassName","admin","signup","formData","a","axios","post","api","data","log","response","status","login","jwt","o","jwtDecode","auth","JSON","parse","username","setItem","stringify","defaults","headers","common","editPassword","put","Error","params","getStoreItem","id","get","getOrders","uid","getUsers","delete","getTags","Array","isArray","chargeCustomerCard","NavLogin","history","useHistory","dispatch","useDispatch","store","cart","className","length","onClick","removeItem","push","MobileNav","useState","open","setOpen","hamburger","useRef","dropdown","useEffect","current","forEach","ref","classList","add","remove","Header","Footer","Layout","Body","props","changingPassword","currentPassword","newPassword","confirmNewPassword","state","setState","error","setError","setChangingPassword","changePasswordBtn","orderCount","setOrderCount","style","backgroundColor","onChange","e","currentTarget","name","value","changePassword","preventDefault","oldPass","newPass","onSubmit","required","placeholder","Redirect","isLogin","password","setFormData","confirmPassword","setConfirmPassword","autoComplete","ListItem","item","setShowCaseItem","setMessage","titleKey","filter","map","key","val","undefined","items","showCaseItem","el","join","Date","toLocaleDateString","toString","updateCartStorage","carts","List","list","setList","message","adjustCartQuantity","itemId","drop","dropall","cartItem","find","splice","findIndex","quantity","confirm","onDeleteUser","user_","deleteUser","then","listItem","catch","src","img","alt","itemToAdd","Number","parseInt","reset","itemIndexInCart","children","innerHTML","addToCart","min","form","parentElement","SearchBar","handlers","tags","top","showPageButtons","defaultValue","disabled","tag","onKeyDown","search","limit","sort","pageDown","pageUp","listItems","setListItems","heading","setHeading","prompt","setPrompt","page","setSearch","setTags","setShowPageButtons","viewAllOrders","setViewAllOrders","getStoreItems","result","slice","Math","max","event","text","sortBy","changeOrderView","searchOrdersByUsername","color","CheckoutForm","stripe","useStripe","elements","useElements","loadingGIF","handleSubmit","cardElement","getElement","CardElement","createPaymentMethod","card","paymentMethod","userID","stripeToken","display","finally","clear","loading","Payment","loadStripe","stripePromise","subtotal","setSubtotal","price","toFixed","string","toUpperCase","App","userString","currentUser","json","guest","userCart","path","render","component","About","Contact","Checkout","Profile","values","route","NotFound","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","createStore","reducer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d072a551.chunk.js","sourcesContent":["export const UPDATE_USER = 'UPDATE_USER';\r\nexport const UPDATE_CART = 'UPDATE_CART';\r\nexport const SIGN_UP = 'SIGN_UP';\r\nexport const LOG_IN = 'LOG_IN';\r\nexport const USERS = 'USERS';\r\nexport const STORE = 'STORE';\r\nexport const ORDERS = 'ORDERS';\r\nexport const CHECKOUT = 'CHECKOUT';\r\n\r\nexport type ListTypes = typeof STORE | typeof ORDERS | typeof USERS | typeof CHECKOUT;\r\n\r\nexport const listItemTitleKeys = {\r\n    [USERS]: 'username',\r\n    [ORDERS]: 'id',\r\n    [STORE]: 'name',\r\n    [CHECKOUT]: 'name'\r\n}\r\n","import { UPDATE_USER } from '../types';\r\nimport { User } from '../../types';\r\n\r\nconst updateUser = (payload : User|null) => ({ type: UPDATE_USER, payload });\r\n\r\nexport default updateUser;","import { OrderItem } from '../../types';\r\n\r\nconst updateCart = (payload : OrderItem[]) => ({ type: \"UPDATE_CART\", payload });\r\n\r\nexport default updateCart;","import updateUserAction from './updateUser';\r\nimport updateCartAction from \"./updateCart\";\r\n\r\nexport const updateUser = updateUserAction;\r\nexport const updateCart = updateCartAction;","let url = `http://54.151.78.250:8080/goshopping-api`;\r\n\r\nif (window.location.host.includes('localhost')) {\r\n    const local = localStorage.getItem('API_URL');\r\n    url = localStorage.getItem('API_URL') || `http://localhost:8080/api`;\r\n\r\n    if (!local) {\r\n        console.warn(\"localStorage.getItem('API_URL') not set. \" +\r\n            \"api url will be set to \" + url);\r\n    }\r\n}\r\n\r\nexport const API = new URL(url);\r\n\r\nexport const routes = {\r\n    STORE: '/goshopping-ui',\r\n    ABOUT: '/goshopping-ui/about',\r\n    CONTACT: '/goshopping-ui/contact',\r\n    CHECKOUT: '/goshopping-ui/checkout',\r\n    PROFILE: '/goshopping-ui/profile',\r\n    SIGN_UP: '/goshopping-ui/signup',\r\n    LOG_IN: '/goshopping-ui/login',\r\n    ORDERS: '/goshopping-ui/orders',\r\n    USERS: '/goshopping-ui/users'\r\n};\r\n\r\nexport const apiRoutes: any  = Object.entries({\r\n    LOG_IN: '/login',\r\n    ORDER: '/order',\r\n    USER: '/user',\r\n    ITEM: '/item',\r\n    TAG: '/tags'\r\n}).reduce((acc, cur) => ({ ...acc, [cur[0]]: API + cur[1] }), {});","export const colors = {\r\n    DARKEST: 'red',\r\n    DARKER: '#ff2900',\r\n    LIGHTER: 'tomato',\r\n    LIGHTEST: '#ff9000',\r\n    GRAYSCALE: [ '#111', '#333', '#666', '#999', '#e4e4e4', 'white' ]\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { routes } from \"../../resources\";\r\nimport { Store } from \"../../types\";\r\nimport { colors } from \"../../styles\";\r\n\r\nconst Nav = () => {\r\n  const user = useSelector(({ user }: Store) => user);\r\n\r\n    return <nav>\r\n        <ul>\r\n            <li> <NavLink to={routes.STORE} exact activeClassName=\"selected\">Store</NavLink> </li>\r\n\r\n            {user &&\r\n                <li> <NavLink to={routes.ORDERS} exact activeClassName=\"selected\">{!user.admin && 'My '}Orders</NavLink> </li>\r\n            }\r\n            \r\n            {user?.admin &&\r\n                <li> <NavLink to={routes.USERS} exact activeClassName=\"selected\">Users</NavLink> </li>\r\n            }\r\n            <li> <NavLink to={routes.ABOUT} exact activeClassName=\"selected\">About</NavLink> </li>\r\n            <li> <NavLink to={routes.CONTACT} exact activeClassName=\"selected\">Contact</NavLink> </li>\r\n        </ul>\r\n\r\n      <style>{`\r\n            nav a {\r\n                color: ${colors.GRAYSCALE[5]};\r\n                outline: none;\r\n                user-select: none;\r\n                font-size: 1.25rem;\r\n            }\r\n\r\n            nav .selected {\r\n                color: ${colors.LIGHTEST};\r\n            }\r\n\r\n            nav a:hover, nav a:focus {\r\n                color: ${colors.LIGHTER};\r\n            }\r\n\r\n            nav a:active {\r\n                color: ${colors.DARKER};\r\n            }\r\n        `}</style>\r\n    </nav>\r\n};\r\n\r\nexport default Nav;\r\n","import axios from 'axios';\r\nimport { apiRoutes as api } from './resources';\r\nimport * as models from './types';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\n// Authentication/Registration\r\n\r\nexport async function signup(formData : models.PostableUser) : Promise<models.User>{\r\n    try {\r\n        const { data } = await axios.post(api.USER, formData);\r\n        return data as models.User;\r\n    } catch (e) {\r\n        console.log(e);\r\n        throw e.response.status;\r\n    }\r\n}\r\n\r\nexport async function login(formData : models.LoginRequest) : Promise<models.User>{\r\n    try {\r\n        const { data: { jwt } } = await axios.post<models.LoginResponse>(api.LOG_IN, formData);\r\n        const o : any = jwtDecode(jwt);\r\n        const auth : models.Auth = JSON.parse(o.auth);\r\n        const user : models.User = { ...auth, username: formData.username };\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        localStorage.setItem('jwt', jwt);\r\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + jwt;\r\n        return user;\r\n    } catch (e) {\r\n        console.log(e);\r\n        throw e.response.status;\r\n    }\r\n}\r\n\r\n/** Reset local storage */\r\nexport function logout() {\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('jwt');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n}\r\n\r\nexport async function editPassword(formData : models.PutableUser) : Promise<models.User|null> {\r\n    try {\r\n        const { data } = await axios.put(api.USER, formData);\r\n        return data as models.User;\r\n    } catch (e) {\r\n        console.log(e);\r\n        throw new Error('Error updating password');\r\n    }\r\n}\r\n\r\n\r\n// Store Items\r\n\r\nexport async function getStoreItems(params : models.ItemSearchQueryParams) : Promise<models.Item[]> {\r\n    try {\r\n        const { data } = await axios({\r\n            url: api.ITEM,\r\n            params\r\n        });\r\n        return (data as models.Item[]);\r\n    } catch (e) {\r\n        console.log(e);\r\n        return [];\r\n    }\r\n}\r\n\r\nexport async function getStoreItem(id : number) : Promise<models.Item|null> {\r\n    try {\r\n        const { data } = await axios.get(api.ITEM + `/${id}`);\r\n        return (data as models.Item);\r\n    } catch (e) {\r\n        console.log(e);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function deleteStoreItem(id : number) {\r\n    try {\r\n        axios.delete(api.ITEM + `/${id}`);\r\n    } catch (e) {\r\n        console.log(e);\r\n        throw new Error('Failed to delete item');\r\n    }\r\n}\r\n\r\n\r\nexport async function createStoreItem(formData : models.PostableItem) : Promise<models.Item> {\r\n    try {\r\n        const { data } = await axios.post(api.ITEM, formData);\r\n        return data;\r\n    } catch (e) {\r\n        console.log(e);\r\n        throw new Error('Failed to create item');\r\n    }\r\n}\r\n\r\nexport async function updateStoreItem(formData : models.PutableItem) : Promise<models.Item> {\r\n    try {\r\n        const { data } = await axios.put(api.ITEM + `/${formData.id}`, formData);\r\n        return data;\r\n    } catch (e) {\r\n        throw new Error('Failed to update item');\r\n    }\r\n}\r\n\r\n// Orders\r\n\r\nexport async function getOrders(uid? : number) : Promise<models.Order[]> {\r\n    try {\r\n        const { data } = await axios.get(api.ORDER + (uid ? `?uid=${uid}` : ''));\r\n        return data as models.Order[];\r\n    } catch (e) {\r\n        console.log(e);\r\n        return [];\r\n    }\r\n}\r\n\r\nexport async function getOrderById(id : number) : Promise<models.Order|null> {\r\n    try {\r\n        const { data } = await axios.get(api.ORDER + `/${id}`);\r\n        return data as models.Order;\r\n    } catch (e) {\r\n        console.log(e);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function createOrder(formData : models.PostableOrder) : Promise<models.Order> {\r\n    try {\r\n        const { data } = await axios.post<models.Order>(api.ORDER, formData);\r\n        return data as models.Order;\r\n    } catch (e) {\r\n        console.log(e);\r\n        throw new Error('Failed to create order');\r\n    }\r\n}\r\n\r\n\r\n// Users\r\n\r\nexport async function getUsers() : Promise<models.User[]> {\r\n    try {\r\n        const { data } = await axios.get<models.User[]>(api.USER);\r\n        return data;\r\n    } catch (e) {\r\n        console.log(e);\r\n        return [];\r\n    }\r\n}\r\n\r\nexport async function getUser(id : number) : Promise<models.User|null> {\r\n    try {\r\n        const { data } = await axios.get<models.User>(api.USER + `/${id}`);\r\n        return data;\r\n    } catch (e) {\r\n        console.log(e);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function deleteUser(id : number) {\r\n    try {\r\n        axios.delete(api.USER + `/${id}`);\r\n    } catch (e) {\r\n        console.log(e);\r\n        throw new Error('Failed to delete user');\r\n    }\r\n}\r\n\r\n\r\n// Tags\r\n\r\nexport async function getTags() : Promise<models.Tag[]> {\r\n    try {\r\n        const { data } = await axios.get(api.TAG);\r\n        return (Array.isArray(data) ? data as models.Tag[] : []);\r\n    } catch (e) {\r\n        console.log(e);\r\n        return [];\r\n    }\r\n}\r\n\r\n\r\n// Payment\r\n\r\nexport async function chargeCustomerCard(formData: models.PostableOrder): Promise<models.OrderResponse>{\r\n    try {\r\n        const {data, status} = await axios.post(api.ORDER, formData);\r\n  \r\n        const response:models.OrderResponse = {\r\n            data,\r\n            status,\r\n        };\r\n        return response;\r\n    } catch (e) {\r\n        console.log(e);\r\n        throw e;\r\n    }\r\n} ","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { routes } from \"../../resources\";\r\nimport { Store } from \"../../types\";\r\nimport { updateUser } from \"../../store/actions\";\r\nimport { colors } from \"../../styles\";\r\nimport { logout } from \"../../ajax\";\r\n\r\nconst NavLogin = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { user, cart } = useSelector((store : Store) => store);\r\n\r\n  const logOut = () => {\r\n    // Reset local storage\r\n    logout();\r\n    dispatch(updateUser(null));\r\n    return history.push(routes.STORE);\r\n  };\r\n\r\n  return (\r\n    <div className=\"NavLogin\">\r\n      <ul>\r\n        <li className=\"cart\">\r\n          <NavLink to={routes.CHECKOUT}>\r\n            <span>\r\n              <i className=\"fas fa-shopping-cart\"></i>\r\n              <span>{cart ? cart.length : 0}</span>\r\n            </span>\r\n          </NavLink>\r\n        </li>\r\n        {user ? (\r\n          <>\r\n            <li className=\"profile\" key=\"profile\">\r\n              <NavLink to={routes.PROFILE}>My Profile</NavLink>\r\n            </li>\r\n            <li key=\"logout\">\r\n              <button onClick={logOut}>Log out</button>\r\n            </li>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <li key=\"signup\">\r\n              <NavLink to={routes.SIGN_UP} exact activeClassName=\"selected\">\r\n                Sign up\r\n              </NavLink>\r\n            </li>\r\n            <li key=\"login\">\r\n              <NavLink to={routes.LOG_IN} exact activeClassName=\"selected\">\r\n                Log in\r\n              </NavLink>\r\n            </li>\r\n          </>\r\n        )}\r\n      </ul>\r\n\r\n      <style>{`\r\n            .NavLogin ul {\r\n                gap: 1.25rem;\r\n                height: 0;\r\n            }\r\n\r\n            .NavLogin a, .NavLogin button {\r\n                background-color: ${colors.LIGHTER};\r\n                border: none;\r\n                border-radius: 15px;\r\n                padding: .5rem .95rem;\r\n                cursor: pointer;\r\n                color: ${colors.GRAYSCALE[5]};\r\n                font-size: .95rem;\r\n                outline: none;\r\n                user-select: none;\r\n            }\r\n\r\n            .NavLogin button {\r\n                padding: .57rem .95rem;\r\n            }\r\n\r\n            .NavLogin .selected {\r\n                background-color: ${colors.DARKER};\r\n            }\r\n            \r\n            .NavLogin a:hover, .NavLogin a:focus, .NavLogin button:hover, .NavLogin button:focus {\r\n                background-color: ${colors.LIGHTEST};\r\n            }\r\n\r\n            .NavLogin a:active, .NavLogin button:active {\r\n                background-color: ${colors.DARKEST};\r\n            }\r\n\r\n            .NavLogin .profile a {\r\n                background-color: transparent;\r\n                color: ${colors.LIGHTEST};\r\n                font-weight: 500;\r\n                font-size: 1rem;\r\n                margin-left: -.5rem;\r\n            }\r\n\r\n            .NavLogin .profile a:hover, .NavLogin .profile a:focus {\r\n                color: ${colors.LIGHTER};\r\n            }\r\n\r\n            .NavLogin .profile a:active {\r\n                color: ${colors.DARKER};\r\n            }\r\n\r\n            .NavLogin .profile a {\r\n                background-color: transparent;\r\n                color: ${colors.LIGHTEST};\r\n                font-weight: 500;\r\n                font-size: 1rem;\r\n            }\r\n\r\n            .NavLogin .profile a:hover, .NavLogin .profile a:focus {\r\n                color: ${colors.LIGHTER};\r\n            }\r\n\r\n            .NavLogin .profile a:active {\r\n                color: ${colors.DARKER};\r\n            }\r\n\r\n            .NavLogin .cart {\r\n              margin-right: -.75rem;\r\n              margin-bottom: .15rem;\r\n            }\r\n            \r\n            .NavLogin .cart a {\r\n                background-color: transparent;\r\n                font-size: 1.5rem;\r\n            }\r\n\r\n            .NavLogin .fa-shopping-cart {\r\n                margin-right: .5rem;\r\n                transition: transform 100ms ease-out;\r\n            }\r\n\r\n            .NavLogin .fa-shopping-cart:hover {\r\n              transform: scale(1.125) translateY(-.1rem);\r\n            }\r\n        `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavLogin;\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport { colors } from '../../styles';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { routes } from '../../resources';\r\nimport { useSelector } from 'react-redux';\r\nimport { Store } from '../../types';\r\n\r\nconst MobileNav = () => {\r\n    const [open, setOpen] = useState<boolean>(false);\r\n    const hamburger = useRef<HTMLDivElement>(null);\r\n    const dropdown = useRef<HTMLUListElement>(null);\r\n    const user = useSelector(({ user } : Store) => user);\r\n\r\n    useEffect(() => {\r\n        if (hamburger?.current && dropdown?.current) {\r\n            [hamburger.current, dropdown.current].forEach(ref => open\r\n                ? ref.classList.add('nav-open')\r\n                : ref.classList.remove('nav-open')\r\n            );\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <div className=\"MobileNav\">\r\n            <div className=\"hamburger\" ref={hamburger} />\r\n            <span className=\"hamburger-click-region\" onClick={() => setOpen(!open)} />\r\n            <ul ref={dropdown}>\r\n                <li> <NavLink to={routes.STORE} exact activeClassName=\"selected\">Store</NavLink> </li>\r\n\r\n                {user &&\r\n                    <li> <NavLink to={routes.ORDERS} exact activeClassName=\"selected\">{!user.admin && 'My '}Orders</NavLink> </li>\r\n                }\r\n                \r\n                {user?.admin &&\r\n                    <li> <NavLink to={routes.USERS} exact activeClassName=\"selected\">Users</NavLink> </li>\r\n                }\r\n                <li> <NavLink to={routes.ABOUT} exact activeClassName=\"selected\">About</NavLink> </li>\r\n                <li> <NavLink to={routes.CONTACT} exact activeClassName=\"selected\">Contact</NavLink> </li>\r\n            </ul>\r\n\r\n            <style>{`\r\n                .MobileNav .hamburger, .MobileNav .hamburger-click-region {\r\n                    position: absolute;\r\n                    left: 1.5rem;\r\n                    top: 2.45rem;\r\n                }\r\n\r\n                .MobileNav .hamburger,\r\n                .MobileNav .hamburger::before,\r\n                .MobileNav .hamburger::after {\r\n                    width: 1.725rem;\r\n                    height: 2.25px;\r\n                    background-color: ${colors.GRAYSCALE[5]};\r\n                    transition: transform 250ms ease-in-out,\r\n                                opacity 250ms ease-in-out;\r\n                }\r\n\r\n                .MobileNav .hamburger::before,\r\n                .MobileNav .hamburger::after {\r\n                    content: '';\r\n                    position: absolute;\r\n                    left: 0;\r\n                    bottom: 6px;\r\n                }\r\n\r\n                .MobileNav .hamburger::after {\r\n                    top: 6px;\r\n                }\r\n\r\n                .MobileNav .hamburger-click-region {\r\n                    height: 21px;\r\n                    width: 2rem;\r\n                    cursor: pointer;\r\n                    top: 1.5rem;\r\n                }\r\n\r\n                .MobileNav .nav-open.hamburger {\r\n                    transform: rotate(45deg);\r\n                }\r\n\r\n                .MobileNav .nav-open.hamburger::before {\r\n                    opacity: 0;\r\n                }\r\n\r\n                .MobileNav .nav-open.hamburger::after {\r\n                    transform: rotate(90deg) translateX(-5.5px);\r\n                }\r\n\r\n                .MobileNav ul {\r\n                    flex-direction: column;\r\n                    gap: 0;\r\n                    align-items: flex-start;\r\n                    background-color: ${colors.GRAYSCALE[0]};\r\n                    position: absolute;\r\n                    bottom: 0;\r\n                    left: 0;\r\n                    z-index: -1;\r\n                    padding: 20rem 7.9rem 1.1rem 1rem;\r\n                    transition: bottom 300ms ease-out;\r\n                    border-radius: 12px;\r\n                }\r\n\r\n                .MobileNav ul.nav-open {\r\n                    bottom: ${!user ? -10.6 : !user.admin ? -12.6 : -14.7}rem;\r\n                }\r\n\r\n                .MobileNav li {\r\n                    margin: .5rem;\r\n                    position: relative;\r\n                    white-space: nowrap;\r\n                }\r\n\r\n                .MobileNav li a {\r\n                    color: ${colors.LIGHTEST};\r\n                    outline: none;\r\n                    user-select: none;\r\n                }\r\n    \r\n                .MobileNav .selected {\r\n                    color: ${colors.GRAYSCALE[5]};\r\n                }\r\n    \r\n                .MobileNav a:hover, .MobileNav a:focus {\r\n                    color: ${colors.LIGHTER};\r\n                }\r\n    \r\n                .MobileNav a:active {\r\n                    color: ${colors.DARKER};\r\n                }\r\n\r\n                .MobileNav li::after {\r\n                    content: '';\r\n                    height: 1px;\r\n                    width: 100%;\r\n                    position: absolute;\r\n                    bottom: -4px;\r\n                    left: 0;\r\n                    background-color: ${colors.GRAYSCALE[5]};\r\n                }\r\n            `}</style>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MobileNav;\r\n","import React from 'react';\r\nimport Nav from './Nav';\r\nimport NavLogin from './NavLogin';\r\nimport MobileNav from './MobileNav';\r\nimport { colors } from '../../styles';\r\n\r\nconst Header = () => {\r\n    return <header>\r\n        <MobileNav />\r\n        <strong className=\"logo\">GoShopping!</strong>\r\n        <Nav />\r\n        <NavLogin />\r\n\r\n        <style>{`\r\n            header {\r\n                background-color: ${colors.GRAYSCALE[0]};\r\n                height: 5rem;\r\n                color: ${colors.GRAYSCALE[5]};\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: space-around;\r\n                position: relative;\r\n            }\r\n\r\n            header .logo {\r\n                color: ${colors.LIGHTEST};\r\n                position: absolute;\r\n                top: 1.85rem;\r\n                left: .9rem;\r\n                user-select: none;\r\n            }\r\n        `}</style>\r\n    </header>\r\n}\r\n\r\nexport default Header;\r\n","import { colors } from '../../styles';\r\n\r\nconst Footer = () => {\r\n    return <footer>\r\n        <span>\r\n            <ul>\r\n                <li>Md Abul Kashem</li>\r\n                <li>Nick Barak</li>\r\n                <li>Zack Garner</li>\r\n                <li>Hisham Saymeh</li>\r\n                <li>Vincent Sevilla</li>\r\n                <li>Erik Terreri</li>\r\n            </ul>\r\n            <div>&copy; 2020 Revature</div>\r\n        </span>\r\n\r\n        <style>{`\r\n            footer, footer span {\r\n                display: flex;\r\n            }\r\n\r\n            footer {\r\n                justify-content: center;\r\n                align-items: center;\r\n                background-color: ${colors.GRAYSCALE[1]};\r\n                color: ${colors.GRAYSCALE[5]};\r\n                text-align: center;\r\n            }\r\n\r\n            footer span {\r\n                flex-direction: column;\r\n                gap: .5rem;\r\n            }\r\n            \r\n            footer ul {\r\n                gap: .65rem;\r\n                margin-bottom: .25rem;\r\n            }\r\n\r\n            footer div {\r\n                user-select: none;\r\n            }\r\n\r\n            footer div {\r\n                user-select: none;\r\n            }\r\n        `}</style>\r\n    </footer>\r\n}\r\n\r\nexport default Footer;\r\n","import React, { ComponentType } from 'react';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\n\r\n// Higher-order component for wrapping dynamic body content with commonly reused components\r\n// Requires no code modifications\r\nconst Layout = (Body : ComponentType<any>) => (props : any) =>\r\n    <>\r\n        <Header />\r\n        <div className=\"body\"> <Body {...props} /> </div>\r\n        <Footer />\r\n    </>\r\n\r\nexport default Layout;\r\n","import Layout from '../layout';\r\n\r\nconst About = () => {\r\n\r\n    return <div className=\"About\">\r\n        <h1 className=\"heading\">About</h1>\r\n        <div className=\"prompt\">We are a generic ecommerce company!</div>\r\n        <section>\r\n            <label><strong>Who We Are</strong></label>\r\n            <div>Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolores facilis aliquid consectetur, similique vero quos, totam nihil cum harum blanditiis tempore ab quam quasi eum! Ullam reprehenderit impedit quasi voluptate facilis ipsa sit! Ad, odit cupiditate. Aliquid, deleniti. Ea velit minus at voluptatibus deleniti exercitationem ducimus laudantium quasi ipsa reiciendis!</div>\r\n        </section>\r\n        <section>\r\n            <label><strong>What We Do</strong></label>\r\n            <div>Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolores facilis aliquid consectetur, similique vero quos, totam nihil cum harum blanditiis tempore ab quam quasi eum! Ullam reprehenderit impedit quasi voluptate facilis ipsa sit! Ad, odit cupiditate. Aliquid, deleniti. Ea velit minus at voluptatibus deleniti exercitationem ducimus laudantium quasi ipsa reiciendis!</div>\r\n        </section>\r\n        <section>\r\n            <label><strong>Our Plans for the Future</strong></label>\r\n            <div>Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolores facilis aliquid consectetur, similique vero quos, totam nihil cum harum blanditiis tempore ab quam quasi eum! Ullam reprehenderit impedit quasi voluptate facilis ipsa sit! Ad, odit cupiditate. Aliquid, deleniti. Ea velit minus at voluptatibus deleniti exercitationem ducimus laudantium quasi ipsa reiciendis!</div>\r\n        </section>\r\n        \r\n        <style>{`\r\n            .About section {\r\n                margin-bottom: 1rem;\r\n            }\r\n        `}</style>\r\n    </div>\r\n}\r\n\r\nexport default Layout(About);\r\n","import Layout from '../layout';\r\n\r\nconst Contact = () => {\r\n\r\n    return <div className=\"Contact\">\r\n        <h1 className=\"heading\">Contact</h1>\r\n        <div className=\"prompt\">Feel free to reach out to our staff!</div>\r\n        <ul>\r\n            <li>\r\n                <strong>email: </strong>\r\n                <span>hr@goshopping.com</span>\r\n            </li>\r\n            <li>\r\n                <strong>phone: </strong>\r\n                <span>(XXX) XXX-XXXX</span>\r\n            </li>\r\n        </ul>\r\n\r\n        <style>{`\r\n            .Contact ul {\r\n                flex-direction: column;\r\n                width: 15rem;\r\n                align-items: flex-start;\r\n            }\r\n        `}</style>\r\n    </div>\r\n}\r\n\r\nexport default Layout(Contact);\r\n","import { useState, useEffect, useRef, FormEvent } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Layout from '../layout';\r\nimport { Store } from '../../types';\r\nimport { editPassword, getOrders } from '../../ajax';\r\nimport { colors } from '../../styles';\r\nimport { useDispatch } from 'react-redux';\r\nimport updateUser from '../../store/actions/updateUser';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { routes } from '../../resources';\r\n\r\ninterface ProfileState {\r\n    changingPassword : boolean;\r\n    currentPassword : string;\r\n    newPassword : string;\r\n    confirmNewPassword : string;\r\n}\r\n\r\nconst Profile = () => {\r\n    const user = useSelector(({ user } : Store) => user);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [state, setState] = useState<ProfileState>({\r\n        changingPassword: false,\r\n        currentPassword: '',\r\n        newPassword: '',\r\n        confirmNewPassword: ''\r\n    });\r\n    const [error, setError] = useState<string>('');\r\n    const [changingPassword, setChangingPassword] = useState<boolean>(false);\r\n    const changePasswordBtn = useRef<HTMLButtonElement>(null);\r\n    const [orderCount, setOrderCount] = useState<number>(0);\r\n\r\n    useEffect(() => {\r\n        (async () => setOrderCount( (await getOrders(user?.id)).length) )()\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        if (changePasswordBtn?.current) {\r\n            changePasswordBtn.current.style.backgroundColor = (changingPassword ? colors.LIGHTER : colors.GRAYSCALE[1]);\r\n        }\r\n    }, [changingPassword]);\r\n    \r\n    if (!user) {\r\n        history.push(routes.STORE);\r\n        return <></>;\r\n    }\r\n\r\n    const onChange = (e : FormEvent<HTMLInputElement>) => {\r\n        setState({ ...state, [e.currentTarget.name]: e.currentTarget.value });\r\n    }\r\n\r\n    const changePassword = async (e : FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        if (state.newPassword !== state.confirmNewPassword) return setError('Passwords must match');\r\n        try {\r\n            const user = await editPassword({ oldPass: state.currentPassword, newPass: state.newPassword });\r\n            setError('Password Changed');\r\n            dispatch(updateUser(user));\r\n            return history.push(routes.STORE);\r\n        } catch (e) { \r\n            switch (e) {\r\n                case 400:\r\n                    return setError('Ivalid password');\r\n                case 401:\r\n                    return setError('Invalid password');\r\n                default:\r\n                    setError('Something went wrong');\r\n            }    \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Profile\">\r\n            <h1 className=\"heading\">My Profile</h1>\r\n            <div className=\"prompt\">View and edit your account information here</div>\r\n            {error && <div className=\"error\">{error}</div>}\r\n            <section>\r\n                <div>\r\n                    <strong>ID: </strong>\r\n                    <span>#{user.id}</span>\r\n                </div>\r\n                <div>\r\n                    <strong>Username: </strong>\r\n                    <span>{user.username}</span>\r\n                </div>\r\n                <div>\r\n                    <strong>Orders: </strong>\r\n                    <span>{orderCount}</span>\r\n                </div>\r\n            </section>\r\n            <section>\r\n                <button className=\"button\" ref={changePasswordBtn} onClick={() => setChangingPassword(!changingPassword)}>Change Password</button>\r\n                {changingPassword &&\r\n                    <form onSubmit={changePassword}>\r\n                        <input type=\"password\" required name=\"currentPassword\" placeholder=\"current password\" onChange={onChange} />\r\n                        <input type=\"password\" required name=\"newPassword\" placeholder=\"new password\" onChange={onChange} />\r\n                        <input type=\"password\" required name=\"confirmNewPassword\" placeholder=\"confirm new password\" onChange={onChange} />\r\n                        <button>Submit</button>\r\n                    </form>\r\n                }\r\n            </section>\r\n\r\n            <style>{`\r\n                .Profile section {\r\n                    margin-bottom: 1.5rem;\r\n                }\r\n\r\n                .Profile .button {\r\n                    padding: .6rem .8rem;\r\n                    font-size: .9rem;\r\n                    margin-bottom: 1.25rem;\r\n                }\r\n\r\n                .Profile form {\r\n                    width: 15rem;\r\n                    margin-bottom: 2rem;\r\n                }\r\n    \r\n                .Profile .error {\r\n                    margin-top: .5rem;\r\n                }\r\n            `}</style>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout(Profile);\r\n","import { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { routes } from '../../resources';\r\n\r\ninterface Props {\r\n    to? : string;\r\n}\r\n\r\n// Redirect to any route by passing it to the \"to\" property. Redirects to home by default.\r\nconst Redirect = ({ to=routes.STORE } : Props) => {\r\n    const history = useHistory();\r\n    useEffect(() => history.push(to));\r\n\r\n    return <></>\r\n}\r\n\r\nexport default Redirect;\r\n","import React from 'react';\r\nimport { routes } from '../../resources';\r\nimport { Link } from 'react-router-dom';\r\nimport Layout from '../layout';\r\nimport { colors } from '../../styles';\r\n\r\nconst NotFound = () => {\r\n    return <div className=\"NotFound\">\r\n        <h1 className=\"heading\">Not Found</h1>\r\n        <div className=\"prompt\">We're sorry! This page doesn't exist.</div>\r\n        <Link to={routes.STORE}>Back to Store</Link>\r\n\r\n        <style>{`\r\n            .NotFound .prompt {\r\n                margin-bottom: 1.45rem;\r\n            }\r\n\r\n            .NotFound a {\r\n                background-color: ${colors.LIGHTER};\r\n                border: none;\r\n                border-radius: 15px;\r\n                padding: .5rem .95rem;\r\n                cursor: pointer;\r\n                color: ${colors.GRAYSCALE[5]};\r\n                font-size: .95rem;\r\n                outline: none;\r\n            }\r\n\r\n            .NotFound .selected {\r\n                background-color: ${colors.DARKER};\r\n            }\r\n            \r\n            .NotFound a:hover, .NotFound a:focus {\r\n                background-color: ${colors.LIGHTEST};\r\n            }\r\n\r\n            .NotFound a:active {\r\n                background-color: ${colors.DARKEST};\r\n            }\r\n        `}</style>\r\n    </div>\r\n}\r\n\r\nexport default Layout(NotFound);\r\n","import { useState, FormEvent } from 'react';\r\nimport { SIGN_UP, LOG_IN } from '../../store/types';\r\nimport Layout from '../layout';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateUser } from '../../store/actions';\r\nimport { PostableUser } from '../../types';\r\nimport { login, signup } from '../../ajax';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { routes } from '../../resources';\r\n\r\ninterface Props extends RouteComponentProps {\r\n    // Tell the component which version to render with string types (exported from store/types)\r\n    type : typeof SIGN_UP | typeof LOG_IN;\r\n}\r\n\r\nconst Login = ({ type, history } : Props) => {\r\n    const isLogin = (type === LOG_IN);\r\n    const dispatch = useDispatch();\r\n    const [formData, setFormData] = useState<PostableUser>({ username: '', password: '' });\r\n    const [confirmPassword, setConfirmPassword] = useState<string>('');\r\n    const [error, setError] = useState<string>('');\r\n\r\n    const onChange = (e : FormEvent<HTMLInputElement>) => setFormData({ ...formData, [e.currentTarget.name]: e.currentTarget.value });\r\n\r\n    const onSubmit = async (e : FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        if (!isLogin && (formData.password !== confirmPassword)) return setError('Passwords must match');\r\n\r\n        try {\r\n            const user = await (isLogin ? login(formData) : signup(formData));\r\n            dispatch( updateUser(user) );\r\n            return history.push(routes.STORE);\r\n        } catch (status) {\r\n            switch (status) {\r\n                case 401:\r\n                    return setError('Ivalid credentials');\r\n                case 409:\r\n                    return setError('Username not available');\r\n                default:\r\n                    setError('Something went wrong');\r\n            }    \r\n        }\r\n    }\r\n\r\n    return <div className=\"Login\">\r\n        <h1 className=\"heading\">{isLogin ? 'Log in' : 'Sign up'}</h1>\r\n        <div className=\"error\">{error}</div>\r\n        <div className=\"prompt\">Please submit your credentials below</div>\r\n        <form onSubmit={onSubmit} autoComplete=\"off\">\r\n            <input type=\"text\" required name=\"username\" placeholder=\"username\" onChange={onChange} />\r\n            <input type=\"password\" required name=\"password\" placeholder=\"password\" onChange={onChange} />\r\n            {!isLogin && <input type=\"password\" required name=\"confirmPassword\" placeholder=\"confirm password\" onChange={e => setConfirmPassword(e.currentTarget.value)} />}\r\n            <button>Submit</button>\r\n        </form>\r\n\r\n        <style>{`\r\n            .Login form {\r\n                width: 15rem;\r\n            }\r\n\r\n            .Login .error {\r\n                margin-top: .5rem;\r\n            }\r\n        `}</style>\r\n    </div>\r\n}\r\n\r\nexport default Layout(Login);\r\n","import { ListItemTypes, Order } from '../types';\r\nimport { colors } from '../styles';\r\nimport { ListTypes, listItemTitleKeys } from '../store/types';\r\nimport { useState } from 'react';\r\nimport { getStoreItem } from '../ajax';\r\n\r\n\r\ninterface Props {\r\n    item : ListItemTypes;\r\n    type : ListTypes;\r\n    setShowCaseItem: React.Dispatch<React.SetStateAction<ListItemTypes>>;\r\n    setMessage: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst ListItem = ({ type, item, setShowCaseItem, setMessage }: Props) => {\r\n    const [titleKey] = useState(listItemTitleKeys[type]);\r\n\r\n    return <div className=\"ListItem\">\r\n        <strong className=\"title\">{item[titleKey as keyof typeof item]}</strong>\r\n        <table className=\"list-item-details\">\r\n            <tbody>\r\n                <tr>\r\n                    {Object.entries(item)\r\n                        .filter(([key]) => key !== titleKey)\r\n                        .map(([key]) => <th key={key}>{key}</th>)\r\n                    }\r\n                </tr>\r\n                <tr>\r\n                    {Object.entries(item)\r\n                        .filter(([key]) => key !== titleKey)\r\n                        .map(([key, val]) => <td key={key}>\r\n                            {(![null, undefined, ''].includes(val))\r\n                                ? Array.isArray(val)\r\n                                    ? (key === \"items\")\r\n                                        ? (item as Order).items.map(({name, id})=><span className=\"orderItemName\" onClick={async () => {\r\n                                            const showCaseItem= await  getStoreItem(id);\r\n                                            if (showCaseItem) {\r\n                                                setShowCaseItem(showCaseItem as ListItemTypes);\r\n                                                setMessage(\"\");\r\n                                            } else setMessage(\"Unable to load item\");\r\n                                        }}>{name}, </span>)    \r\n                                        : val.filter(el => el).join(', ')\r\n                                    : (key ===\"date\") \r\n                                        ? new Date(val).toLocaleDateString()\r\n                                        : val.toString()\r\n                                : 'Not available'\r\n                            }\r\n                        </td>\r\n                    )}\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n        <style>{`\r\n            .ListItem .list-item-details {\r\n                font-family: Arial, Helvetica, sans-serif;\r\n                border-collapse: collapse;\r\n                width: 100%;\r\n            }\r\n                \r\n            .ListItem .list-item-details td, .ListItem .list-item-details th {\r\n                border: 1px solid #ddd;\r\n                padding: 8px;\r\n            }\r\n                \r\n            .ListItem .list-item-details tr:nth-child(even){ background-color: #f2f2f2; }\r\n                \r\n            .ListItem .list-item-details tr:hover { background-color: #ddd; }\r\n                \r\n            .ListItem .list-item-details th {\r\n                padding-top: 12px;\r\n                padding-bottom: 12px;\r\n                text-align: left;\r\n                background-color: ${colors.LIGHTEST};\r\n                color: white;\r\n            }\r\n\r\n            .ListItem .title {\r\n                display: block;\r\n                font-size: 1.35rem;\r\n                text-decoration: underline;\r\n                margin-bottom: .25rem;\r\n                margin-left: .125rem;\r\n                transition: color 200ms ease-out;\r\n            }\r\n\r\n            .ListItem .title:hover {\r\n                color: ${colors.DARKEST};\r\n            }\r\n\r\n            .ListItem .orderItemName:hover {\r\n                cursor: pointer;\r\n                text-decoration: underline;\r\n                color: ${colors.LIGHTER};\r\n\r\n            }\r\n        `}</style>\r\n    </div>\r\n}\r\n\r\nexport default ListItem;\r\n","import { Location } from 'history';\r\nimport { User, OrderItem } from './types';\r\n\r\n\r\nexport function capitalize(string : string) {\r\n    return string[0].toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport function getPathVar(location : Location) {\r\n    return location.pathname.split(/\\/.*?\\//)[1];\r\n}\r\n\r\nexport const updateCartStorage = (user : User|null, cart : OrderItem[]) => {\r\n    const carts = JSON.parse( (localStorage.getItem(\"carts\") || '{}') );\r\n    carts[user ? user.id : 'guest'] = cart;\r\n    localStorage.setItem(\"carts\", JSON.stringify(carts));\r\n}\r\n","import { ListItemTypes, Item, OrderItem, Tag, Store, User } from \"../types\";\r\nimport { ListTypes, STORE, CHECKOUT, ORDERS, USERS } from \"../store/types\";\r\nimport ListItem from \"./ListItem\";\r\nimport { updateCart } from \"../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCartStorage } from '../util';\r\nimport { useState, FormEvent } from 'react';\r\nimport { deleteUser } from '../ajax';\r\n\r\ninterface Props {\r\n  list: ListItemTypes[];\r\n  setList?: React.Dispatch<React.SetStateAction<ListItemTypes[]>>;\r\n  type: ListTypes;\r\n}\r\n\r\nconst List = ({ list, setList, type }: Props) => {\r\n  const dispatch = useDispatch();\r\n  const {user, cart} = useSelector((store : Store) => store);\r\n  const [showCaseItem, setShowCaseItem] = useState<ListItemTypes>(list[0]);\r\n  const [message, setMessage] = useState(\"\");\r\n  \r\n  const addToCart = (e : FormEvent<HTMLFormElement>, item : Item) => {\r\n    e.preventDefault();\r\n    const itemToAdd : OrderItem = {\r\n        ...item,\r\n        quantity: Number.parseInt(e.currentTarget.quantity?.value) || 1\r\n    };\r\n    e.currentTarget.reset();\r\n    const itemIndexInCart = cart.findIndex(cartItem => cartItem.id === itemToAdd.id);\r\n\r\n    if (itemIndexInCart > -1) {\r\n        cart[itemIndexInCart].quantity += itemToAdd.quantity;\r\n    } else cart.push(itemToAdd);\r\n\r\n    dispatch( updateCart(cart) );\r\n    updateCartStorage(user, cart);\r\n    e.currentTarget.children[0].innerHTML = `Added ${itemToAdd.quantity} item${itemToAdd.quantity > 1 ? 's' : ''}`;\r\n  };\r\n\r\n  const adjustCartQuantity = (itemId:number, drop:boolean=false, dropall:boolean=false) => {\r\n    const cartItem = cart.find(({ id }) => itemId === id);\r\n    if (!cartItem) return;\r\n    if (drop) {\r\n        if (dropall) { cart.splice(cart.findIndex(item => item === cartItem), 1) }\r\n        else if (cartItem.quantity === 1) {\r\n            if (window.confirm(\"This will remove the item from your cart\")) {\r\n                cart.splice(cart.findIndex(item => item === cartItem), 1);\r\n            }\r\n        }\r\n        else cartItem.quantity--;\r\n    } else cartItem.quantity++;\r\n\r\n    dispatch( updateCart(cart) );\r\n    updateCartStorage(user, cart);\r\n  }\r\n\r\n  const onDeleteUser = (user_ : User) : void => {\r\n    if (user?.admin && !user_.admin && window.confirm(\"This action cannot be reversed\")) {\r\n      deleteUser(user_.id)\r\n        .then(() => {\r\n          setMessage(`Deleted user \"${user_.username}\"`);\r\n          setList && setList(list.filter(listItem => listItem !== user_));\r\n        })\r\n        .catch(() => setMessage(`Failed to delete user \"${user_.username}\"`))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"List\">\r\n        {message && <div className=\"error\">{message}</div>}\r\n        {!list.length\r\n            ? (type !== CHECKOUT) ? <div>No items found</div> : null\r\n            : <ul>\r\n                {( ((type === ORDERS) && (showCaseItem && showCaseItem !== list[0])) ? [showCaseItem, ...list] : list).map((item) =>\r\n                    <li key={item.id}>\r\n                        {[STORE, CHECKOUT].includes(type) && <img src={(item as Item).img} alt=\"store item\" />}\r\n\r\n                        <ListItem key={item.id} type={type} setMessage={setMessage} setShowCaseItem={setShowCaseItem} item={  Object.entries(item)\r\n                            .reduce((acc, [key, val]) =>\r\n                                [(![USERS, ORDERS].includes(type) && 'id'), (!user?.admin && 'userID'), 'stripeToken', 'img', 'password'].includes(key)\r\n                                    ? acc\r\n                                    : ({ ...acc, [key]: (key === 'tags')\r\n                                        ? val.map(({ name } : Tag) => name)\r\n                                        : (key === 'price') ? `$${val}` : val }),\r\n                            {}) as ListItemTypes} \r\n                        />\r\n                        \r\n                        {type === STORE &&\r\n                            <form className=\"adjust-cart-store\" onSubmit={e => addToCart(e, item as Item)}>\r\n                                <div className=\"success\"></div>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    name=\"quantity\"\r\n                                    placeholder=\"quantity\"\r\n                                    min={1}\r\n                                    required\r\n                                    onClick={e => {\r\n                                        const form = e.currentTarget.parentElement;\r\n                                        if (form) form.children[0].innerHTML = '';\r\n                                    }}\r\n                                />\r\n                                <button>ADD TO CART</button>\r\n                            </form>\r\n                        }\r\n\r\n                        {type === CHECKOUT &&\r\n                            <div className=\"adjust-cart-checkout\">\r\n                                <button style={{ backgroundColor: 'turquoise' }} onClick={() => adjustCartQuantity(item.id)}>+</button>\r\n                                <button style={{ backgroundColor: 'red' }} onClick={() => adjustCartQuantity(item.id, true)}>-</button>\r\n                                <button onClick={() => adjustCartQuantity(item.id, true, true)}>Drop All</button>\r\n                            </div>\r\n                        }\r\n\r\n                        {(type === USERS && !(item as User).admin) &&\r\n                            <button className=\"btn-delete-user\" onClick={() => onDeleteUser(item as User)}>Delete</button>\r\n                        }\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        }\r\n\r\n        <style>{`\r\n            .List {\r\n                margin: 1.5rem 1rem;\r\n            }\r\n\r\n            .List > ul {\r\n                flex-direction: column;\r\n                align-items: flex-start;\r\n                justify-content: flex-start;\r\n                width: calc(100vw - 4rem);\r\n                gap: 2.5rem;\r\n            }\r\n\r\n            .List > ul > li {\r\n                display: grid;\r\n                grid-template-columns: 1fr 100fr 1fr;\r\n                gap: 2rem;\r\n                align-items: center;\r\n                margin: 0 1rem 0 .5rem;\r\n            }\r\n\r\n            .List .adjust-cart-store button, .List .adjust-cart-checkout button {\r\n                width: 91.25%;\r\n                white-space: nowrap;\r\n                transition: transform 125ms ease-out;\r\n                border-radius: 10px;\r\n            }\r\n\r\n            .List .adjust-cart-checkout {\r\n                display: flex;\r\n            }\r\n\r\n            .List .adjust-cart-checkout button:hover { \r\n                transform: translateY(-.2rem);\r\n            }\r\n\r\n            .List .adjust-cart-checkout button:active {\r\n                transform: translateY(-.05rem);\r\n            }\r\n\r\n            .List .btn-delete-user {\r\n                background-color: red;\r\n                color: white;\r\n                width: 4rem;\r\n                text-align: center;\r\n            }\r\n\r\n            .List .btn-delete-user:hover {\r\n                box-shadow: inset 2px 1px maroon;\r\n            }\r\n\r\n            .List .error {\r\n                font-size: 1.25rem;\r\n                margin-bottom: 1rem;\r\n                text-align: center;\r\n            }\r\n        `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import { KeyboardEvent } from \"react\";\r\nimport { Tag } from '../types';\r\n\r\ntype Props = {\r\n    handlers : {\r\n        pageUp() : void;\r\n        pageDown() : void;\r\n        filter(event : { currentTarget: HTMLSelectElement; }) : void;\r\n        search(event: KeyboardEvent<HTMLInputElement> ) : void;\r\n        limit(event: { currentTarget: HTMLSelectElement; }) : void;\r\n        sort(event: { currentTarget: HTMLSelectElement; }) : void;\r\n    };\r\n    tags: Tag[];\r\n    top: boolean;\r\n    showPageButtons: { pageUp : boolean; pageDown : boolean };\r\n};\r\n\r\nconst SearchBar = ({handlers, tags, top, showPageButtons} : Props) => {\r\n    return <div className=\"SearchBar\">\r\n        {top && \r\n        <span>\r\n            <select className=\"filter\" defaultValue=\"default\" onChange={handlers.filter}>\r\n                <option key={0} value=\"default\" disabled>Filter by</option>\r\n                <option key=\"any\" value=\"any\">Any</option>\r\n                {tags.map(tag => <option key={tag.id} value={tag.name}>{tag.name}</option>)}\r\n            </select>\r\n            <input type=\"text\" className=\"search\" placeholder=\"What would you like to see?\" onKeyDown={handlers.search} />\r\n            <select className=\"limit\" onChange={handlers.limit}>\r\n                <option value=\"10\">10</option>\r\n                <option value=\"25\">25</option>\r\n                <option value=\"50\">50</option>\r\n            </select>\r\n            <select className=\"sort\" defaultValue=\"default\" onChange={handlers.sort}>\r\n                <option value=\"default\" disabled>Sort by</option>\r\n                <option value=\"relevance\">Relevance</option>\r\n                <option value=\"price_asc\">Price Ascending</option>\r\n                <option value=\"price_desc\">Price Descending</option>\r\n                <option value=\"name_asc\">Name Ascending</option>\r\n                <option value=\"name_desc\">Name Descending</option>\r\n            </select>\r\n        </span>}\r\n        {showPageButtons.pageDown && <button onClick={handlers.pageDown}>Previous Page</button>}\r\n        {showPageButtons.pageUp && <button onClick={handlers.pageUp}>Next Page</button>}\r\n    </div>\r\n}\r\n\r\nexport default SearchBar;","import { useState, useEffect, KeyboardEvent } from 'react';\r\nimport Layout from '../layout';\r\nimport { STORE, ORDERS, USERS } from '../../store/types';\r\nimport { useSelector } from 'react-redux';\r\nimport { Store } from '../../types';\r\nimport List from '../List';\r\nimport SearchBar from '../SearchBar';\r\nimport { getOrders, getStoreItems, getUsers, getTags } from '../../ajax';\r\nimport { ListItemTypes, ItemSearchQueryParams, Tag } from '../../types';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { routes } from '../../resources';\r\n\r\ninterface Props extends RouteComponentProps {\r\n    type : typeof STORE | typeof ORDERS | typeof USERS;\r\n}\r\n\r\nconst ListDisplay = ({ type, history } : Props) => {\r\n    const user = useSelector(({ user } : Store) => user);\r\n    const [listItems, setListItems] = useState<ListItemTypes[]>([]);\r\n    const [heading, setHeading] = useState<string>('Store');\r\n    const [prompt, setPrompt] = useState<string>('Store');\r\n    const [search, setSearch] = useState<ItemSearchQueryParams>({ page: 0, quantity: 10 });\r\n    const [tags, setTags] = useState<Tag[]>([]);\r\n    const [showPageButtons, setShowPageButtons] = useState<{pageUp:boolean;pageDown:boolean}>({ pageUp: true, pageDown: false });\r\n    const [viewAllOrders, setViewAllOrders] = useState<boolean>(true);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            switch (type) {\r\n                case STORE:\r\n                    setHeading('Store');\r\n                    setPrompt('Browse items in our catalog');\r\n                    setTags(await getTags());\r\n                    break;\r\n                case ORDERS:\r\n                    if (!user) return history.push(routes.STORE);\r\n                    setHeading(`${user.admin ? 'All' : 'My'} Orders`);\r\n                    setPrompt(`View current and past orders for ${user.admin ? 'all accounts' : 'your account'}`);\r\n                    setListItems(await getOrders(user.admin ? undefined : user.id));\r\n                    break;\r\n                case USERS:\r\n                    if (!user?.admin) return history.push(routes.STORE);\r\n                    setHeading('Users');\r\n                    setPrompt('View and manage registered users');\r\n                    setListItems(await getUsers());\r\n                    break;\r\n                default:\r\n                    return history.push(routes.STORE);\r\n            }\r\n        })();\r\n    }, [type, user, history]);\r\n\r\n    useEffect(() => {\r\n        (type === STORE) && getStoreItems(search)\r\n            .then(result => {\r\n                setShowPageButtons({\r\n                    pageUp: (result.length > search.quantity),\r\n                    pageDown: (search.page > 0)\r\n                });\r\n                setListItems(result.slice(0, Math.min(search.quantity, result.length)));\r\n            });\r\n    }, [search, type]);\r\n\r\n    const handlers = {\r\n        pageUp() {\r\n            setSearch({ ...search, page: search.page+1 });\r\n        },\r\n\r\n        pageDown() {\r\n            setSearch({ ...search, page: Math.max(0, search.page-1) });\r\n        },\r\n\r\n        filter(event : { currentTarget: HTMLSelectElement; }) {\r\n                setSearch({ ...search, page: 0, tag: (event.currentTarget.value === \"any\") ? undefined : event.currentTarget.value });\r\n        },\r\n\r\n        search(event: KeyboardEvent<HTMLInputElement>) {\r\n            if(event.key === 'Enter')\r\n                setSearch({ ...search, page: 0, text: event.currentTarget.value });\r\n        },\r\n\r\n        limit(event : { currentTarget: HTMLSelectElement; }) {\r\n            setSearch({ ...search, quantity: Number(event.currentTarget.value), page: 0 });\r\n        },\r\n\r\n        sort(event : { currentTarget: HTMLSelectElement; }) {\r\n            setSearch({ ...search, page: 0, sortBy: event.currentTarget.value})\r\n        }\r\n    }\r\n\r\n    const changeOrderView = async () => {\r\n        if (!user?.admin) return;\r\n        setListItems(await getOrders(viewAllOrders ? user?.id : undefined))\r\n        setHeading(`${viewAllOrders ? 'Your' : 'All'} Orders`);\r\n        setPrompt(`View current and past orders for ${viewAllOrders ? 'your account' : 'all accounts'}`);\r\n        setViewAllOrders(!viewAllOrders);\r\n    }\r\n\r\n    const searchOrdersByUsername = async (e : KeyboardEvent<HTMLInputElement>) => {\r\n        const el = e.currentTarget;\r\n        if (el.style.color === 'red') {\r\n            el.value = '';\r\n            el.style.color = 'black';\r\n            return;\r\n        }\r\n        const id = Number.parseInt(el.value);\r\n\r\n        if (e.key === 'Enter') {\r\n            if (id) {\r\n                setHeading(`Orders for User #${id}`);\r\n                setPrompt('View current and past orders for this user\\'s account')\r\n                setListItems(await getOrders(id));\r\n            } else {\r\n                el.value = 'Please enter a valid number';\r\n                el.style.color = 'red';\r\n            }\r\n        }\r\n    }\r\n\r\n    return <div className=\"ListDisplay\">\r\n        <h1 className=\"heading\">{heading}</h1>\r\n        <div className=\"prompt\">{prompt}</div>\r\n        {(type === ORDERS && user?.admin) && <>\r\n            <button onClick={changeOrderView}>{viewAllOrders ? 'View My Orders' : 'View All Orders'}</button>\r\n            <input type=\"text\" placeholder=\"Search orders by user ID\" onKeyDown={searchOrdersByUsername} />\r\n        </>}\r\n        {type === STORE && <SearchBar handlers={handlers} tags={tags} top showPageButtons={showPageButtons} />}\r\n        <List type={type} list={listItems} setList={setListItems} />\r\n        {type === STORE && <SearchBar handlers={handlers} tags={tags} top={false} showPageButtons={showPageButtons} />}\r\n    </div>\r\n}\r\n\r\nexport default Layout(ListDisplay);","export default __webpack_public_path__ + \"static/media/loading.cb238f1e.gif\";","import { useState, useEffect, useRef, FormEvent } from 'react';\r\nimport loading from \"../images/loading.gif\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { CardElement, useStripe, useElements, Elements } from '@stripe/react-stripe-js';\r\nimport { chargeCustomerCard } from \"../ajax\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Store, PostableOrder } from '../types';\r\nimport { colors } from '../styles';\r\nimport { updateCartStorage } from '../util';\r\nimport { updateCart } from '../store/actions';\r\n\r\nconst CheckoutForm = () => {\r\n  const { user, cart } = useSelector((store : Store) => store);\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [message, setMessage] = useState<string>('');\r\n  const loadingGIF = useRef<HTMLImageElement>(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = async (event:FormEvent<HTMLFormElement>) => {\r\n    // Block native form submission.\r\n    event.preventDefault();\r\n    // Prevent submission if stripe is not ready\r\n    if (!stripe || !elements || !user || !cart.length) return;\r\n\r\n    // Get a reference to a mounted CardElement. Elements knows how\r\n    // to find your CardElement because there can only ever be one of\r\n    // each type of element. \r\n    const cardElement = elements.getElement(CardElement);\r\n    if (!cardElement) return;\r\n    \r\n    // Use your card Element with other Stripe.js APIs\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n        type: 'card',\r\n        card: cardElement,\r\n    });\r\n    if (error) return console.log(error);\r\n\r\n    if (paymentMethod?.id) {\r\n      const formData:PostableOrder = {\r\n        userID: user.id,\r\n        stripeToken: paymentMethod.id,\r\n        items: cart.map(({ id, quantity }) => ({ id, quantity }))\r\n      };\r\n      \r\n      if (loadingGIF.current) loadingGIF.current.style.display = 'inline';\r\n      chargeCustomerCard(formData)\r\n        .then(() => {\r\n          setMessage(\"Order placed successfully\");\r\n          dispatch( updateCart([]) );\r\n          updateCartStorage(user, []);\r\n        })\r\n        .catch(() => setMessage(\"Could not process payment\"))\r\n        .finally(() => {\r\n          //clear card info after submit to prevent duplicate payment\r\n          cardElement?.clear();\r\n          if (loadingGIF.current) loadingGIF.current.style.display = 'none'\r\n        });\r\n    }\r\n  }\r\n    \r\n  return <div className=\"CheckoutForm\">\r\n    <form onSubmit={handleSubmit}>\r\n      <CardElement />\r\n      <button>Place your order</button>\r\n      <p style={{ color: colors.LIGHTEST }}>{message}</p>\r\n      <img ref={loadingGIF} className=\"loading-gif\" src={loading} alt=\"Loading...\" />\r\n    </form>\r\n\r\n    <style>{`\r\n      .CheckoutForm {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n      }\r\n\r\n      .CheckoutForm form {\r\n        margin-top: 20px;\r\n        width: 400px;\r\n      }\r\n\r\n      .CheckoutForm .loading-gif {\r\n        display: none;\r\n        height: 30px;\r\n        width: 30px;\r\n      }\r\n    `}</style>\r\n  </div>\r\n}\r\n\r\nconst Payment = () => {\r\n  const [stripePromise] = useState(() => loadStripe('pk_test_51GrsxpDr6Z4R7UKUmoPXHW7swHORfQcKX7XO6D9GqXVuM1qn6m5ywhZmVmFzgxMYD6oHwkJqCneMr4oUXuIzixt4003qzTIOiD'));\r\n  const cart = useSelector((store : Store) => store.cart);\r\n  const [subtotal, setSubtotal] = useState<number>(0.00);\r\n\r\n  useEffect(() => setSubtotal(cart.reduce((acc, {price, quantity}) => acc + (price * quantity), 0)), [cart]);\r\n\r\n  return <div className=\"Payment\">\r\n    <h2>{cart.length ? `Subtotal: ${subtotal.toFixed(2)}` : 'Cart is empty'}</h2>\r\n    <Elements stripe={stripePromise}> <CheckoutForm /> </Elements>\r\n\r\n    <style>{`\r\n      .Payment {\r\n        max-height: 250px;\r\n        border-radius: 1rem;\r\n        box-shadow: 0px 5px 5px #ccc;\r\n        margin: 2rem 3rem 1.75rem 3rem;\r\n        padding: 40px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        text-align: center;\r\n      }\r\n      \r\n      .Payment .FormGroup {\r\n        margin: 0 15px 20px;\r\n        padding: 0;\r\n        border-style: none;\r\n        background-color: #7795f8;\r\n        will-change: opacity, transform;\r\n        box-shadow: 0 6px 9px rgba(50, 50, 93, 0.06), 0 2px 5px rgba(0, 0, 0, 0.08),\r\n          inset 0 1px 0 #829fff;\r\n        border-radius: 4px;\r\n      }\r\n      \r\n      .Payment .FormRow {\r\n        display: -ms-flexbox;\r\n        display: flex;\r\n        -ms-flex-align: center;\r\n        align-items: center;\r\n        margin-left: 15px;\r\n        border-top: 1px solid #819efc;\r\n      }\r\n      \r\n      .Payment .StripeElement--webkit-autofill {\r\n        background: transparent !important;\r\n      }\r\n      \r\n      .Payment .StripeElement {\r\n        width: 100%;\r\n        padding: .75rem .75rem;\r\n        border: 1px solid ${colors.GRAYSCALE[4]};\r\n        border-radius: 15px;\r\n      }\r\n    `}</style>\r\n  </div>\r\n};\r\n\r\n\r\nexport default Payment;","import Payment from '../Payment';\r\nimport Layout from '../layout';\r\nimport List from '../List';\r\nimport { useSelector } from 'react-redux';\r\nimport { Store } from '../../types';\r\nimport { CHECKOUT } from '../../store/types';\r\nimport { capitalize } from '../../util';\r\nimport { colors } from '../../styles';\r\n\r\nconst Checkout = () => {\r\n    const { user, cart } = useSelector((store : Store) => store);\r\n\r\n    return (\r\n        <div className=\"Checkout\">\r\n            <h1 className=\"heading\">{user ? capitalize(user.username) + \"'s\" : 'My'} Cart</h1>\r\n            <div className=\"prompt\">{cart?.length ? \"Here's what items are in your cart\" : 'Visit the \"Store\" page to add items to your cart!'}</div>\r\n            <List type={CHECKOUT} list={cart || []} />\r\n            {user\r\n              ? <Payment />\r\n              : <div className=\"msg-unathenticated\">\r\n                  <div>Log in or make an account to place an order!</div>\r\n                  <span>Don't worry, the items in your cart will still be there when you do.</span>\r\n                </div>\r\n            }\r\n            <style>{`\r\n              .Checkout .msg-unathenticated {\r\n                text-align: center;\r\n                margin-top: 2.8rem;\r\n              }\r\n\r\n              .Checkout .msg-unathenticated > div {\r\n                font-weight: bold;\r\n                color: ${colors.LIGHTER};\r\n                font-size: 1.5rem;\r\n                margin-bottom: .85rem;\r\n              }\r\n\r\n              .Checkout .msg-unathenticated span {\r\n                display: block;\r\n                font-size: 1.05rem;\r\n                color: ${colors.LIGHTEST};\r\n                margin-bottom: 3.5rem;\r\n              }\r\n            `}</style>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout(Checkout);\r\n","import React, { useEffect } from 'react';\r\nimport './App.sass'; // need to change \"app.sass\" before push \r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateUser } from './store/actions';\r\nimport { Store, User, OrderItem } from './types';\r\nimport { SIGN_UP, LOG_IN, STORE, ORDERS, USERS } from './store/types';\r\n\r\nimport About from './components/pages/About';\r\nimport Contact from './components/pages/Contact';\r\nimport Profile from './components/pages/Profile';\r\nimport Redirect from './components/pages/Redirect';\r\nimport NotFound from './components/pages/NotFound';\r\nimport Login from './components/pages/Login';\r\nimport ListDisplay from './components/pages/ListDisplay';\r\nimport Checkout from \"./components/pages/Checkout\";\r\nimport { routes } from './resources';\r\nimport axios from 'axios';\r\nimport updateCart from './store/actions/updateCart';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(({ user }: Store) => user);\r\n\r\n  // Re-establish user/auth header on page refresh\r\n  useEffect(() => {\r\n    const userString = localStorage.getItem('user');\r\n    const jwt = localStorage.getItem('jwt');\r\n\r\n    if (userString) {\r\n      const currentUser: User = JSON.parse(userString);\r\n      dispatch(updateUser(currentUser));\r\n    }\r\n\r\n    if (jwt) axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + jwt;\r\n  }, [dispatch]);\r\n\r\n  // Re-establish cart on user change/page refresh\r\n  useEffect(() => {\r\n   // let carts = JSON.parse( (localStorage.getItem('carts') || '{ guest: [] }') );\r\n   let json = localStorage.getItem('carts');\r\n   let carts = json ? JSON.parse(json) : {guest: []};\r\n    const userCart : OrderItem[] = (user && carts[user.id]) ? carts[user.id] : carts['guest'];\r\n    dispatch( updateCart(userCart) );\r\n  }, [user, dispatch]);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        {/* Perpetual routes */}\r\n        <Route key={routes.STORE} path={routes.STORE} exact render={() => <ListDisplay type={STORE} />} />\r\n        <Route key={routes.ABOUT} path={routes.ABOUT} exact component={About} />\r\n        <Route key={routes.CONTACT} path={routes.CONTACT} exact component={Contact} />\r\n        <Route key={routes.CHECKOUT} path={routes.CHECKOUT} exact component={Checkout} />\r\n\r\n        {user\r\n          ? // If authenticated\r\n            [\r\n              <Route\r\n                key={routes.CHECKOUT}\r\n                path={routes.CHECKOUT}\r\n                exact\r\n                component={Checkout}\r\n              />,\r\n              <Route\r\n                key={routes.ORDERS}\r\n                path={routes.ORDERS}\r\n                exact\r\n                render={() => <ListDisplay type={ORDERS} />}\r\n              />,\r\n              <Route\r\n                key={routes.PROFILE}\r\n                path={routes.PROFILE}\r\n                exact\r\n                component={Profile}\r\n              />,\r\n            ]\r\n          : // Else\r\n            [\r\n              <Route\r\n                key={routes.SIGN_UP}\r\n                path={routes.SIGN_UP}\r\n                exact\r\n                render={() => <Login type={SIGN_UP} />}\r\n              />,\r\n              <Route\r\n                key={routes.LOG_IN}\r\n                path={routes.LOG_IN}\r\n                exact\r\n                render={() => <Login type={LOG_IN} />}\r\n              />,\r\n            ]}\r\n\r\n        {user?.admin && [\r\n          <Route\r\n            key={routes.USERS}\r\n            path={routes.USERS}\r\n            exact\r\n            render={() => <ListDisplay type={USERS} />}\r\n          />,\r\n        ]}\r\n\r\n        {/* Redirect any valid route inputs to Home, invalid to 404 */}\r\n        {Object.values(routes).map(route => <Route key={route} path={route} exact component={Redirect} />)}\r\n        <Route path={routes.STORE} component={NotFound} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { Action } from '../../types';\r\nimport { UPDATE_USER } from '../types';\r\n\r\nconst user = (state=null, { type, payload } : Action) => {\r\n    switch (type) {\r\n        case UPDATE_USER:\r\n            return payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default user;","import { Action } from '../../types';\r\nimport { UPDATE_CART } from '../types';\r\n\r\nconst cart = (state=[], { type, payload } : Action) => {\r\n   if (!payload) return [...state];\r\n    switch (type) {\r\n        case UPDATE_CART:\r\n            return [...payload];\r\n        default:\r\n            return [...state];\r\n    }\r\n}\r\n\r\nexport default cart;","import { combineReducers } from \"redux\";\r\nimport user from './user';\r\nimport cart from './cart';\r\n\r\nexport default combineReducers({ user, cart });","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport reducer from './store/reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}